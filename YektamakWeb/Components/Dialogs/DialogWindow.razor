@inject IJSRuntime JS

@code {
    public bool IsVisible { get; private set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public string Title { get; set; } = "Dialog";
    [Parameter] public string Content { get; set; } = "Dialog";

    public void ShowDialog() => IsVisible = true;
    private void PreventClose()
    {
        // Bu method boş, arka plan tıklamalarını engeller.
    }

    private void HideDialog()
    {
        IsVisible = false;
    }
}

@if (IsVisible)
{
    <div class="dialog-backdrop" @onclick="PreventClose">
        <div class="dialog-content">
            <h3>@Title</h3>
            @* <div>@ChildContent</div> *@
            <div>@((MarkupString)Content)</div>
            <button @onclick="HideDialog">Kapat</button>
        </div>
    </div>
}
<style>
    .dialog-backdrop {
        position: fixed; /* Sayfa boyunca sabit kalmasını sağlar */
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5); /* Koyu bir arka plan */
        display: flex;
        justify-content: center; /* Yatayda ortalar */
        align-items: center; /* Dikeyde ortalar */
        z-index: 1000; /* Diğer öğelerin üzerinde görünmesi için yüksek z-index */
    }

    .dialog-content {
        background: white;
        padding: 20px;
        border-radius: 8px; /* Kenarlara yuvarlaklık ekler */
        min-width: 300px; /* Minumum genişlik */
        max-width: 600px; /* Maksimum genişlik */
        z-index: 1010; /* Dialog içeriği için z-index */
    }

    .dialog-backdrop button {
        margin-top: 20px; /* Butonun üzerine boşluk bırakır */
    }
</style>
