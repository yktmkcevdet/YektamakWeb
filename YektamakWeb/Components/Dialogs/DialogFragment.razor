@using Microsoft.AspNetCore.Components.Rendering
@if (IsVisible)
{
    <div class="dialog-backdrop">
        <div class="dialog-content">
            <h3>Deneme</h3>
            <div style="overflow: auto;">@ChildContent</div>
            <button @onclick="HideDialog">Kapat</button>
            @* <iframe src="@ChildContent" style="width: 100%; height: 100%; border: none;"></iframe> *@
        </div>
    </div>
}

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    public bool IsVisible { get; private set; }
    public void ShowDialog()
    {
        IsVisible = true;
        StateHasChanged();
    } 
    public void HideDialog() => IsVisible = false;
}

<style>
    .dialog-content {
        width: 100%;
        height: 400px; /* İstediğiniz yükseklik */
        overflow: auto; /* İçerik sığmadığında kaydırma çubuklarını gösterir */
    }

    .dialog-backdrop {
        position: fixed; /* Sayfa boyunca sabit kalmasını sağlar */
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5); /* Koyu bir arka plan */
        display: flex;
        justify-content: center; /* Yatayda ortalar */
        align-items: center; /* Dikeyde ortalar */
        z-index: 1000; /* Diğer öğelerin üzerinde görünmesi için yüksek z-index */
    }

    .dialog-content {
        background: white;
        padding: 20px;
        border-radius: 8px; /* Kenarlara yuvarlaklık ekler */
        min-width: 600px; /* Minumum genişlik */
        max-width: 1200px; /* Maksimum genişlik */
        min-height: 300px;
        max-height: 1080px;
        z-index: 1010; /* Dialog içeriği için z-index */
    }

    .dialog-backdrop button {
        margin-top: 20px; /* Butonun üzerine boşluk bırakır */
    }
</style>